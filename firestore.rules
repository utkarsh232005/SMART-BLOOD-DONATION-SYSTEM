rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isDonor(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == "DONOR" || 
             get(/databases/$(database)/documents/users/$(userId)).data.role == "donor";
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create, update: if isOwner(userId);
      allow delete: if false;
    }
    
    // Donations collection rules
    match /donations/{donationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && (isDonor(request.auth.uid) || request.resource.data.donorId == request.auth.uid);
      allow update, delete: if isAuthenticated() && resource.data.donorId == request.auth.uid;
    }
    
    // Notifications - users can read/write their own notifications
    match /notifications/{notificationId} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    // Blood requests - can be read by anyone, edited only by owners
    match /requests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || resource.data.donorId == request.auth.uid);
    }
    
    // Donation requests - created by hospitals, readable by authenticated users
    match /donationRequests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && resource.data.createdBy == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.createdBy == request.auth.uid;
    }
    
    // Appointments - created by donors, readable by involved parties
    match /appointments/{appointmentId} {
      allow read: if isAuthenticated() && (resource.data.donorId == request.auth.uid || resource.data.hospitalId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (resource.data.donorId == request.auth.uid || resource.data.hospitalId == request.auth.uid);
    }
    
    // Blood inventory - managed by hospitals
    match /bloodInventory/{inventoryId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Feedback and reviews
    match /feedback/{feedbackId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
  }
}